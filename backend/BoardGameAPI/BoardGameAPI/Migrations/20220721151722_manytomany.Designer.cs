// <auto-generated />
using BoardGameAPI;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BoardGameAPI.Migrations
{
    [DbContext(typeof(BoardGameContext))]
    [Migration("20220721151722_manytomany")]
    partial class manytomany
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BoardGameAPI.Models.BoardGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<bool>("IsCoop")
                        .HasColumnType("bit");

                    b.Property<int>("MaxPlayers")
                        .HasColumnType("int");

                    b.Property<int>("MinPlayers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BoardGames");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Genre = 6,
                            IsCoop = true,
                            MaxPlayers = 4,
                            MinPlayers = 1,
                            Name = "Omega Virus"
                        },
                        new
                        {
                            Id = 2,
                            Genre = 2,
                            IsCoop = false,
                            MaxPlayers = 4,
                            MinPlayers = 2,
                            Name = "Mr Bacon's Big Adventure"
                        });
                });

            modelBuilder.Entity("BoardGameAPI.Models.BoardGamePiece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BoardGameId")
                        .HasColumnType("int");

                    b.Property<int>("GamePieceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BoardGameId");

                    b.HasIndex("GamePieceId");

                    b.ToTable("BoardGamePieces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoardGameId = 2,
                            GamePieceId = 1
                        },
                        new
                        {
                            Id = 2,
                            BoardGameId = 2,
                            GamePieceId = 3
                        });
                });

            modelBuilder.Entity("BoardGameAPI.Models.GamePiece", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Material")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GamePieces");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Material = 1,
                            Name = "Dice"
                        },
                        new
                        {
                            Id = 2,
                            Material = 0,
                            Name = "Dice"
                        },
                        new
                        {
                            Id = 3,
                            Material = 0,
                            Name = "Meeple"
                        },
                        new
                        {
                            Id = 4,
                            Material = 2,
                            Name = "Stones"
                        });
                });

            modelBuilder.Entity("BoardGameAPI.Models.BoardGamePiece", b =>
                {
                    b.HasOne("BoardGameAPI.Models.BoardGame", "BoardGame")
                        .WithMany("GamePieces")
                        .HasForeignKey("BoardGameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BoardGameAPI.Models.GamePiece", "GamePiece")
                        .WithMany("BoardGames")
                        .HasForeignKey("GamePieceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BoardGame");

                    b.Navigation("GamePiece");
                });

            modelBuilder.Entity("BoardGameAPI.Models.BoardGame", b =>
                {
                    b.Navigation("GamePieces");
                });

            modelBuilder.Entity("BoardGameAPI.Models.GamePiece", b =>
                {
                    b.Navigation("BoardGames");
                });
#pragma warning restore 612, 618
        }
    }
}
